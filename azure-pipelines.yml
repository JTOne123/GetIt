pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: GitVersion@4
  displayName: 'Run GitVersion'
  inputs:
    preferBundledVersion: false
- task: CmdLine@2
  displayName: 'Restore yarn packages'
  inputs:
    script: 'yarn install --frozen-lockfile'
    workingDirectory: 'GetIt.UI'
- task: CmdLine@2
  displayName: 'Restore packages for GetIt.UI'
  inputs:
    script: 'dotnet restore'
    workingDirectory: 'GetIt.UI\\src'
- task: CmdLine@2
  displayName: 'Build GetIt.UI'
  inputs:
    script: 'yarn webpack'
    workingDirectory: 'GetIt.UI'
- task: DotNetCoreCLI@2
  displayName: 'Build NuGet package'
  inputs:
    command: 'pack'
    packagesToPack: 'GetIt.Controller'
    versioningScheme: 'byEnvVar'
    versionEnvVar: GitVersion.NuGetVersion
- task: PublishPipelineArtifact@0
  displayName: 'Publish NuGet package as pipeline artifact'
  inputs:
    artifactName: 'GetIt.nupkg'
    targetPath: '$(Build.ArtifactStagingDirectory)/GetIt.$(GitVersion.NuGetVersion).nupkg'
# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)/GetIt.$(GitVersion.NuGetVersion).nupkg'
#     ArtifactName: 'GetIt NuGet package 2'
#     publishLocation: 'Container'
- task: DotNetCoreCLI@2
  displayName: 'Push NuGet package to internal feed'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/GetIt.$(GitVersion.NuGetVersion).nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'GetIt'
- task: GitHubRelease@0
  inputs:
    gitHubConnection: johannesegger
    repositoryName: '$(Build.Repository.Name)' 
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'manual'
    tag: '$(Build.BuildNumber)'
    title: ''
    releaseNotesSource: 'input'
    releaseNotesFile: ''
    releaseNotes: ''
    assets: ''
    assetUploadMode: 'delete'
    isDraft: false
    isPreRelease: false
    addChangeLog: true